what is the 180 cm tall persons job title	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what city were two or fewer people born in	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
whats the birthplace of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )	overnight-socialnetwork
who is friends with employees who have an end date that is not 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the relationship status of employees starting in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employee who joined before 2004 or in 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the gender of people 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
students who started before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find all people who have alices as a mutual friend	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
fine me all employees who start by 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which people are friends with students who graduated no earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of employees who began working by 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who has over two relationship status	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )	overnight-socialnetwork
who is born is 2004 and is a male	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
employee with the largest number of employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
birthplace of employees who are not employed by mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who works for someone other than mckinsey	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is friends with alice and is male	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
gender of student who does not finish by 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
name the employees who quit the job when alice was born 	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees who are not software engineers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
a friend of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
employers of all people who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what is the gender of employees whose start date is earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who were not friends before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employees who joined after  alice joined	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee started earlier than alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what people are logged in who are also friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find me people born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
what is the gender of the students who dont graduate in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
a person whose friend started on or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
who is software engineer or program manager	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employees had a quit date that was not in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which student ending date is earlier than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
a student who left before student alice did	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employees whose last day was before or on alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
birthplaces of all 180 cm tall people	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
relationship status of student that left school before or on 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
friends of male people	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
which city were at least two people born in	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
people with two or less friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what student started the job before alice quit	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me a person with the same or later birthday as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
who measures 180 cm and quit in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
employee whose employer is not mckinsey	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what students have a start date earlier than that of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is the relationship status of employees who started after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
180 cm tall person who is logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what employee has the latest start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students finishing on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what students have an end date that is greater than that of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me the employee who has had the most previous jobs	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were people that started work before 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that finished school before 2004 or before 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
person who is older then alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )	overnight-socialnetwork
what is the employees relationship status who started no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what employee has end date equal to employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find someone who is as tall or shorter than alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )	overnight-socialnetwork
how many genders are there	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )	overnight-socialnetwork
employees who started on the same date as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people with a gender of male and their friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
what employees have a start date later than 2004 and who are they friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people shorter than alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )	overnight-socialnetwork
people who have friends who are not software engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who are the employees who quit before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which students started no later than alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which employee is not the software engineer	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students who attended college the longest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
either 180cm or 200cm	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )	overnight-socialnetwork
people that started working when alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is friends with the person who didnt start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which software engineer is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )	overnight-socialnetwork
who is born in new york and friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
sex of people who began school in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the gender of no more than two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
students who finish with or after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is thre relationship status of students who started no sooner than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is alices gender	( call SW.listValue ( call SW.getProperty en.person.alice ( string gender ) ) )	overnight-socialnetwork
gender of employees who finish after or in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
a worker whose company isnt mckinsey	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is friends with an employee who started in a year other than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
relationship status as most of the persons	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
people that stopped working when alice started working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the gender of an individual	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
who is alice friends with thats 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what is the gender that is the gender of at most two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what is the gender of students not attending brown university	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
who is a person whose university is not brown university friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the friends of people who joined their studies before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
when did alice start attending brown university	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )	overnight-socialnetwork
who has friends with an end date that is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who are friends with males	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
person that started working most recently	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what gender is more than two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which of alices friends were born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
find me the birth city of all students whoes end date is 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employee ended earlier than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee ended earlier than alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people that started working before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who quit after alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what students have an end date that is no greater than employee alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who works for the same employer as ailce	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who are not the same gender as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
people with friends who started work in 2004 at the latest	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people of the least common gender	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which employee started no greater than alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what students had a start date of 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the employees that were hired before alice quit her job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
students who graduated no later than the day alice did	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person is friends with people that do not work for mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
name an employee who started before the student named alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has two genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )	overnight-socialnetwork
which person has the least number of relationship statuses	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )	overnight-socialnetwork
which 180 cm tall people have a start date of 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
find all male friends of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
an employer with at least two employees	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
friends of people that are currently online	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
find students with one or two fields of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who finished working when alice started or before	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the birthplace of a person whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
university number	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ) )	overnight-socialnetwork
where were the people that started working in any year but 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people who are 180 cm tall with 2004 start date	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
field of study of alice ended in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )	overnight-socialnetwork
either 2004 or 2010	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )	overnight-socialnetwork
birthplaces of alices friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
which people that alice is friends with are friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people who were born on or after alices first day of work	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )	overnight-socialnetwork
name the friend of an employee who did not quit in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what people are friends with employees who have an end date before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
students who started in 2004 or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
friends of students starting on or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
who is the birthplace of students not majoring in computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees with the same job title as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who are 180 cm tall and are software engineers	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )	overnight-socialnetwork
find employees starting before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the relationship status of a male	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
which employee has an end date earlier than alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is the student whose start date was at least 2004 friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find all people born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
what is the gender of an employee whose end date is earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who joined on in 2004 and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
people that stopped working when alice stopped school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who was born in 2004 and is friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people that started working when alice stopped school or after	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who were born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
who graduated after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee started the same day as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were employees at companies other than mckinsey born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the relationship status of employees whose last day was not in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what city has a birthplace of a person who is at least 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
employees who started after alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has less than two friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
relationship status of employees whose start date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find employees who have an end date earlier than employee alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
gender of student who was a smaller date then 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
males born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
employee whose start date is minimum the end date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
relationships statuses of employees who dont work as software engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
a worker who began in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is relationship status of student with last day before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what students have an end date that is before the birthday of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is youngest	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )	overnight-socialnetwork
employees who did not start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
city that most number of persons born	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which employees have had no more than employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee has the largest end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employee started the earliest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has friends who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what city was alice or bob born in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
what genders are the people that finished school after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of people that started working after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
gender of student whose end date is not 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
relationship status of all students who started after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what student has only one field of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the student who graduated on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the gender of a student whom has the end date not equal to 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
when did alice finish school	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )	overnight-socialnetwork
student whose start date is after start date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students starting after alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people born before alice quit her job	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
who is alices single friend	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
is alice employed by mckinsey	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )	overnight-socialnetwork
find the gender of people with a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find employees who have a start date other than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
whos friends with someone who left a company or retired before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which students graduated any year but 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
mention the name of an employee whose end date is either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the city of birth for all employees that quit in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find a person who is taller than 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )	overnight-socialnetwork
any male who has logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
what student has a start date before the birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which student has attended the fewest universities	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students started school latest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who was born after 2003	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
people born before alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
what is the field of study for people who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
name an employee who left after alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the birth city of employees who have an end date of 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
relationship status of people that are friends with alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
people born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
find me all employees that will start at the company before alice leaves	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which gender is the employee who ended after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
alices male friends	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find the people who joined their work before 2005	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has two friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what is the birthplace of employees whose last day was before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people born before the employment end date of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
what is the employees relationship status who ended in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
person that has the most job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people born after alice started working	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )	overnight-socialnetwork
a person with a friend whos not a computer science major	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
friends of people who quit their jobs before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who is friends with alice and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find all friends that are not software engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the birthplace of student who joined before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what person is friends with a student that has an end date of 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what person is logged in and was born in new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
what employee has an end date that is before the end date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the birth city of students with an end date later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the student end date at least 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
where were the people that started work in or after 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which employee quit first	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees have a start date that is either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has the fewest friends	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
working person with the least job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who joined work after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees have a start date that is the same as student alice or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which student studied computer science or history	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who are friends with alice whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
people that have two or less birthplaces	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )	overnight-socialnetwork
students who started school after alice quit her job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students whose end date is later than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who completed their study before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has no more than two employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find students who attended one or two universites	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
any male who is logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string logged_in ) ) )	overnight-socialnetwork
who has two or more genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )	overnight-socialnetwork
employee who joined before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find males that alice is friends with	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
find everyone who is either single or married	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )	overnight-socialnetwork
which employees last day is no later than alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the relationship status of people that finished school before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the friends of employees with an end date no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which employees started no later than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee quit recently	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
a student not taking computer science	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find everyone born in new york who is 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
which students have the same birthrate and start date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what people have a birthplace of new york who are also friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people born after alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
what student has an end date before student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who has friends that are online	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
which student left most recently	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what gender are the two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
who is the same height as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what city is the birthplace of an employee that is not a software engineer	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who is 180cm or higher	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what employees started on or before alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the relationship status of student who ended in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find all people who are not in a relationship and were born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
student who was a smaller start date than alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
an employee that started before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is friends with alice and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
people born in 2004 or 2010	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )	overnight-socialnetwork
which employees have the fewest job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who started first	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who has friends that are students whos start date before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find me all people who are 180 cm tall and currently online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )	overnight-socialnetwork
friend of student whose end date is after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find employees who have a start date that is the same as employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employee is starting by the time alice leaves the company	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which student was the last to finish	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what are the relationship statuses of employees whose start date is earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the relationship status of people who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what birthplace has at least two people in it	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which employees last day was no later than 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students finishing before or in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what people have a birthplace of new york and a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
which person has the birthdate of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
what is relationship status of employee whose last day was after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people with a height of 180 cm who are the same gender as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
birth city of employee whose start date is not after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which date did student alice left	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )	overnight-socialnetwork
which people have more than genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )	overnight-socialnetwork
what city is the birthplace of students with an end date no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what city is the birthplace of a student that is not studying computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
where were the students of any field but computer science born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
whose relationship status is not a unique	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what are the birthplaces of people logged in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
gender of employees starting before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what employee has no more than two employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which students have the same major as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
persons who were born on or after start date of alices study	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )	overnight-socialnetwork
gender of employees other than software engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
birthplace of students who started no earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people who were born after alice quit her job	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
relationship status of employee whose employer is not mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find relationship statuses of students with a start date that is 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people born in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
which employee ended no greater than alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
student whose end date is same as start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who quit their jobs after alice born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
male friend of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
alices friend who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
employee whose end date is not after start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students whose end date is before the birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what are the birthplaces of employees starting after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which student goes to the same university as student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people with a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
people from new york that are friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
employees with the most job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
an employee who left before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people born on or before the date alice stopped attending school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )	overnight-socialnetwork
when did alice stop working	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )	overnight-socialnetwork
which students started no earlier than the day alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
a friend of an employee that ends after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what gender are people that started working in or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people born between 2004 and 2010	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )	overnight-socialnetwork
what is the relationship status of employees whose last day was no earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people with no birthplaces	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string birthplace ) ) )	overnight-socialnetwork
friends of people who quit their jobs after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what day in 2004 did alice start working	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )	overnight-socialnetwork
what is the gender of people that started working in or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employees whose end date is no earlier than alices end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which student started before alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employees have a job title other than software engineer	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find me a list of students whose start date was in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is friends with an employee who start date is not 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employees starting the latest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has least number of friends	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what employees started at the same time as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
an employee ending before alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the status of the two peoples relationship	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what date did alice leave her job in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )	overnight-socialnetwork
find friends of employees with 2004 end dates or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what student has an end date that is before the end date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who are single that are currently online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )	overnight-socialnetwork
all 180 cm tall singles	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find people with alices birthday who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what genders are people that started school in any year but 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which student ended at most on alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which employee start after alice leaves	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
how many gender options are there	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )	overnight-socialnetwork
friends of people who joined their jobs after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
student who started after alice left	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
two or more gendered people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )	overnight-socialnetwork
relationship status of employee whose job title is not software engineer	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
someone not friends with alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
what is the relationship status of people that started working before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find me all students who have only one field of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find employees starting before or on same day as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
field of study of someone 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find students friends who ended in 2004 or before	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people that started school when alice started work or after	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
friends of employees who dont finish in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find someone of any gender	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )	overnight-socialnetwork
where was alices friend born in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
person whos birthday is before alice graduates	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )	overnight-socialnetwork
where were the people that finished school after 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
birthplaces of people who studied in fields other than computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is gender of employees with last days other than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who has had the most different relationship statuses	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string relationship_status ) ) )	overnight-socialnetwork
people that are friends with someone that is single	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
person from same birth place as that of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )	overnight-socialnetwork
birthplace of two or less persons	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what person is friends with males	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
what city is the birthplace of less than two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which computer science students are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )	overnight-socialnetwork
students who finish after alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that are currently online that are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )	overnight-socialnetwork
name someone who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what city is the birthplace of the employee who started earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what was alices last day of her job from 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )	overnight-socialnetwork
people who are th gender of alices friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
people born on or after the day alice quit working	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
what is the birthplace of students who graduated before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employee has the earliest start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the total number of genders	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )	overnight-socialnetwork
person born after alice graduated	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )	overnight-socialnetwork
what is the relationship status of a person whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what gender does the person born in 2004 have	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
people that stopped school after alice stopped working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students who began school after alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find friends of people who were born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
a friend of a student ending in 2004 or before	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees who started no earlier than alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find students whose last day was 2004 or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people who are friends with empoyees whose last day was not in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
alices birthplace	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )	overnight-socialnetwork
which students have the most majors	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person was born in new york and single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
who is 180 cm tall and is studying computer science	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )	overnight-socialnetwork
what is the gender of working people that dont work for mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what student started the day alice quit	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students who died before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find all people who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
alices friend who is logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
students who started no later than the start date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person has the same relationship status as that of the majority	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
find people that are friends with students who have quit after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
whats the gender of students who started school after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
where were the people that finished school in or before 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employee with largest end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who have the same birthday as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )	overnight-socialnetwork
find employee with start date on or before alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find all the students that started in 2004 and after	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employee whose start date is minimum 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
friend of someone who quit before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
genders of employees not finishing in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
how many relationship statuses are there	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ) )	overnight-socialnetwork
students who finish in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students started school after 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person is friends with the person logged in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
what students began school before alice began working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find employees friend with a last day in 2004 or before	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the gender of people attending any university but brown	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which cities were alices friends born in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
who is friends with someone who started working during or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who went to school but did not start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who completed studies with or before alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who has friends with a start date after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employee who started before start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what was alices job title from 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )	overnight-socialnetwork
what is the gender of person who is born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
who was the last employee to quit	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find alices friends who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
either brown university or ucla	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )	overnight-socialnetwork
where are all employees born who are not employed by mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who completed their studies before alice joined	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people that have more than two birthplaces	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )	overnight-socialnetwork
find all  friends with student with end date other than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which students graduated before alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employees who started working the same day alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employees who started on the day that alice graduated	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employees last day was the same day as alices graduation day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who joined the institution after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student who finishes at most on 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people taller than 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
180 cm tall persons who were born in the same place where alice was born	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find people who are male	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
find student with earliest last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person is 180 cm tall and is alices friend	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find employees who have a start date later than that of the end date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which genders are alice and bob	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
student who graduated before alice started her job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what city is the birthplace of an employee who has a start date later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who are friends with the employee thats leaving before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who were born on or after the day alice quit her job	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
what university will alice finish in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )	overnight-socialnetwork
people born on or before the day alice quit her job	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
which student ended school right when alice started her job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
either alice or bob	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )	overnight-socialnetwork
find student with last day on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people who are friends with alice and are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
find people who are logged in who are alices friends	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people who are male or female	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )	overnight-socialnetwork
who is a person whose friends with alice that is single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
alices friends who are logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find me males born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
find people with a height of 180 cm that go to brown university	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )	overnight-socialnetwork
find students starting the same day as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
which students graduate after alice starts her new job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who are friends with students not attending brown university	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find employees starting on or after alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find a student who left on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people with friends that finished school in 2004 at the latest	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people not born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )	overnight-socialnetwork
which student has the greatest end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find people who are friend with students that have an end date not of 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
when did alice start being an employee	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )	overnight-socialnetwork
what is the gender of the employee who started in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what students began school either after 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student whose start date is not before birth date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the birth city for students whom have a start date other than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
birthplace of students whose end date is not in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
gender of student whose start date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find employees who quit theri job before 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find everybody who has two genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )	overnight-socialnetwork
find males who are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
who has a single friend	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
what was alices field of study	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )	overnight-socialnetwork
which guys are also 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find alice a student at university	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )	overnight-socialnetwork
what is the gender of students with a start date 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
name a friend of the person who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
who left their job the longest time ago	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students who finish before or contemporaneous to alices start	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which employees have no more than 2 job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is alice and bobs gender	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
which people are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what is the gender of most	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
who are alices male friends	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people that are friends with someone that stopped working after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that stopped school when alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students at brown or ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students graduated in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students who joined after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is the friend of an employee whose end date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employee whose end date is not after birth date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is alices friend that is from new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
what city was the student born in that has 2004 as end date	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
name a city that fewer than two of the people were born in	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what genders are the people born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
who was hired after alice quit	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has a smaller end date than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which person is friends with an employee who was here in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which employee started no earlier than alices end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
friends of all the people born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
find people who are logged in who are also friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )	overnight-socialnetwork
find single people who are friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
who works for mckinsey or google	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees have an end date that is either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
person who joined study on the day alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has the same end date as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employed until 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were the working people that are not software engineers born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employee whose start date is before start date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who were born the same day alice started school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) )	overnight-socialnetwork
find me all people that are friends with the employee starting after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find people who are 180 cm tall with 2004 start dates	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
relationship status of students finishing after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what person is shorter than 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
who has the least number of relationship statuses	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )	overnight-socialnetwork
what is the relationship status of a person born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
a student starting after alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student whose start date is not before end date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that are not friends with alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
what student ended school before 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me the place of birth for all employees starting before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
one person whose friend started studies before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which students last day was the around the same day as alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what city were people who are single born in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
employee whose start date is after end date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who started in 2004 and are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
employees whose end date is later than alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people with two relationship statuses or less	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )	overnight-socialnetwork
males who are online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
where is the birthplace of the student who left school before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
friends of employees who started before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find friends of employees who started in 2004 or after	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
a unique relationship status	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which students starte school the same day alice graduated	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is 180 cm tall and goes to brown university	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )	overnight-socialnetwork
find students from brown university	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )	overnight-socialnetwork
name the student who the quit the job with alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what relationship statuses are not claimed by alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
employees leaving the company no earlier than alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
gender of students starting contemporaneous to or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find people who are single	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
find people who are friends with no more than two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what is the university of a person whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what student has an end date no later than the end date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who quit their job after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has over two genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )	overnight-socialnetwork
what is the relationship status of people born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
employees starting on or after alice finishes	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find birthplaces of nonmckinsey employees	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which people were born after alice left her job	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
who started school the earliest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
person who is friends with someone whose end date is after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
all 180 cm tall females	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what is the relationship status of people that stopped school in or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which people are friends with students graduating in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employees had an end date before alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find employees whose end date is the same as that of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has a birthdate at the end of alices employment	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
find the relationship statuses of people whom alice is friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
people born on or before the day alice started school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )	overnight-socialnetwork
a student ending before alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the birthplace of people who are 6 feet tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what students have an end date no earlier than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me one of alices male friends	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
employee whose start date is not before end date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employe that has a smaller start date than alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find friends who are not in computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees who started after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what people have a height of 180 cm and a birth city of new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
name a person friends with a person that is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
who is studying the most things	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find employees with the same last day as student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
whats the relationship status of the employee starting after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
whats the gender of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
name a friend of alice who is online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
when did alice stop working as a software engineer	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )	overnight-socialnetwork
friends of alice who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
where were students that did not finish in 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the gender of alice or bob	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
who is friends with the student who did not start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employee started no later than alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students finishing contemporaneous to or after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what students have an end date that is no earlier than the start date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students who have an end date that is greater than alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is job title of alice whose employment end date is in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )	overnight-socialnetwork
find employees with an end date that is less than alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employees last day was in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what students graduate when alice was hired	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what date did alice quit studying in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )	overnight-socialnetwork
name a friend of the employee who started working no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what cities are the birthplaces of people who have a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
which employee ended no greater than alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who are friends with the employee that does not start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
person born in new york in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
which employees started on or before alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who employees alice as a software engineer	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )	overnight-socialnetwork
what students have a start date that is either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me all people who are not friends with alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
friends of alice born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
find males born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
what is the relationship status of friend of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
employees with the fewest job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find friends of people who quit work in 2004 at the latest	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
fine me employees that are leaving before alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students whose end date is larger than 2004 and 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employee who works for mckinsey or google	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what was alices last day of work	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )	overnight-socialnetwork
find people that are friends with employees whose start date is later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employees starting on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employee who left after alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find friends of students who started in 2004 and after	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the male friends of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find students who have no more than two fields of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
person with the most friends	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
one student who started in or after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that work for less than two employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the tallest person	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )	overnight-socialnetwork
who is studying less than two things	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student with only one field of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
alice is a student at which university	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )	overnight-socialnetwork
what person has their status as single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
fine me friends of people who joined their jobs after 2003	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
students that will begin after 2004 and no later than 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that are currently online and friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
which employee ended on alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people born before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
employee whose end date is before 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
whats the gender of the student that befins after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people that started working before 2004 or before 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
when did alice stop working as a software engineer	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )	overnight-socialnetwork
gender of people who started their study before 2005	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
name a person 180 cm tall who started working in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
find the person that is 180 cm tall and is a software engineer	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )	overnight-socialnetwork
males who were born in new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
what is the gender of an employee with an end date later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find friends of people who do not work at mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who are friends with those who completed studies before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
persons whose height is 180 cm or more	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
student whose start date is not before start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find the realtionship status of employees who are not employed by mickinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
friend of student whose end date is not 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which relationship status is claimed by at least two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
find people who are employees with an end date no later than 2004 and their friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
whos 180 cm tall and in the same sort of relationship situaiton as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what students started after or at the same time as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what student has an end date that is at least either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students who began school in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which person is friends with someone who goes to somewhere besides brown university	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the gender of people that started school before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which people are friends with employees whose last day was before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find the gender of employees who have an end date that is 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what employees have an end date no later than 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee has been employed by the most employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people at least as tall as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )	overnight-socialnetwork
gender of employees that do not work as software engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
all 180 cm tall people who studied computer science	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )	overnight-socialnetwork
anyone single who is logged in	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
what people are logged in with a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )	overnight-socialnetwork
people that started school before alice started working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is the relationship status of a student whose end date is earlier than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find people who have a birthplace the same as those with a height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
what university did alice attend in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )	overnight-socialnetwork
what person has a relationship status the same as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )	overnight-socialnetwork
a 180 cm tall male	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find me friends of people who joined their jobs before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find employees who have a start date earlier than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people with a relationship status of single and a total height of 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
relationship status of employee whose start date is not after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
birth city of student whose start date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what city is the birthplace of a student who graduated 2004 or after	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what student started after alices end date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is the relationship status of an employee who is not a software engineer	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
person with same birthdate of person with 180 cm height	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
someone 180 cm tall and same gender as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
gender of employees that started before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
name a person who is 180 cm who started working in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
who is friends with employees before or on 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
ulca or brown univercity	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )	overnight-socialnetwork
students who graduated before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has the same or bigger end date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were alices friends born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
find the people who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
when did alice quit working for mckinsey	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )	overnight-socialnetwork
whats the relationship status of people who are male	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
people who are 180 cm tall before 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
what student has an end date that is no greater than the start date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is in the same type of relationship as alice and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
who is friends with over two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
friends of people who completed their studies after 2003	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
relationship status of employee whose start ate is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what employee has a start date that is the birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find employees with the same last day as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
is alice going to brown university	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )	overnight-socialnetwork
which students started no later than the day alice started work	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what students have an end date that is the same as student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student who started on birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what city was alice or bob born in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
which university did alice study computer science at	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )	overnight-socialnetwork
student whose start date is not 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who arent alices friend	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )	overnight-socialnetwork
working people that are not software engineers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who quit at the same time or after alice did	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who are people with a birthdate of 2004 friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
which of alices friends were born in new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
find people who are students with a start date later than 2004 and their friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of students with a start date less than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find employees who started on student alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
name a person 180 cm tall who was born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
a student who started after student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
relationship status of students who joined before 2005	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find employees who have an end date later than 2004 and their friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is thre relationship status of students who started no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find students who have a start date before either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find friends of people born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
who started working after the student alice did	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who studied in universities other than brown university	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who has friends that are students who have a start date before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
where were working people that did not stop in 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the gender of employees whose end date is less than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that are friends with the new emplyee starting before2994	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that stopped working when alice started or after	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people who are 180 cm tall and attend brown university	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )	overnight-socialnetwork
which employee finished the same time alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employee whose end date is before end date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employees who started working in or before 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students who started on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students who ended school in 2003 or earlier	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employees finishing contemporaneous to or after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
student whose end date is birth date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students that didnt finish in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who was born in the same place as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )	overnight-socialnetwork
which students have fewer than 2 majors	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
180 cm tall person with same birth place as that of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people with the same relationship status as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )	overnight-socialnetwork
who started in 2004 and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
people with two or more birthplaces	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )	overnight-socialnetwork
what student started earliest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who work at mckinsey or google	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )	overnight-socialnetwork
what is the relationship status of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people who have single friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
find friends connections who graduated after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what employees have an end date that is employee alices start date or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
an employee who left on or before the day student alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the birthdate of the person who is 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
who is studying something other than computer science	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
person who is friends with someone whose start date is no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employees who did not start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
name the friend of alice whose birthplace is new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
where were the people that started working after 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find students whose university is either brown university or ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
relationship status of employee whose end date is not before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what gender is the student whose end date is 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people that have a friend born in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
what students graduated in 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is 180 cm tall and the same relationship status as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
employee whose start date is birth date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
person who stopped school before alice stopped working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students completed school by the time alice began	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employee with not more than two employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people with two relationship statuses	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )	overnight-socialnetwork
who is friends with the employee who started before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who is friends with the person from new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
name an employee who began in 2004 or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the job title of alice who works for mckinsey	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )	overnight-socialnetwork
what is alices job title	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )	overnight-socialnetwork
what is the average height of a person	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )	overnight-socialnetwork
who are people who are students with an end date no greater than 2004 friends with	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the birthplaces of people who are male	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )	overnight-socialnetwork
students who started before alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students have the fewest majors	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is online and is friends with	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
a worker who began on or before the day student alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were the people that started school after 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees who start after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which employee started after alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which people are friends with students who didnt graduate in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what was alices field of study as a student	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )	overnight-socialnetwork
who has friends that are students and whos end date is 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
person born in new york and who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
who is friends with alices friend	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
who is friends with the person who started school before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
name a person who is 180 cm who is friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
birth city of student whose university is not brown university	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employee was the first to be hired	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who was born on alices start date	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )	overnight-socialnetwork
students who did not start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
relationship status of student who is not student of brown university	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what city is the birthplace of the student who ended school before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees who are software engineers or program managers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is employees gender who started in 2004 or earlier	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find friends of people who graduated school but not in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees whose last day is the same as alices first day at the job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find employees with last days on or after alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employee has the same birthday as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees have mickinsey as their employer	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is single from new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
what is the gender of working people that did not start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who are friends with the new employee that will be starting before before or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find people with a height of 180 cm and their relationship status	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
people that stopped working when alice started school or after	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
relationship status of student whose end date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which employee ended no greater than alices start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find a person who is a student with a start date that is not 2004 and their friends	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find me all people are are taller than 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )	overnight-socialnetwork
students who graduated before alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who stopped working in 2004 and is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
person that stopped school most recently	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who was born after alice started	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )	overnight-socialnetwork
employee with at most two jobs	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find birthplaces of students whose last day was 2004 or before	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find students studying fields other than computer science	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students with last day on or after alices first day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employees have a start date before that of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the gender of people studying something other than computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the gender of employees who started after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
where were two people both born	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what is the birth city of a student who didnt start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of people that started work in or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the job title of alice whose employer is mckinsey	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )	overnight-socialnetwork
employees who finish when or before alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who has friends whos end date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what students have a start date that is no greater than employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which employee started after the student named alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were the graduates of 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
students who start after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is 180 cm tall and has an end date of 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
which of my friends connections are online now	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
find employees starting on or before alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who have friends who left their jobs in or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the relationship status of students who are not majoring in compuer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people that are friends with alice or bob	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )	overnight-socialnetwork
find friends of employee with end date not in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which students go to brown university or ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
whats the gender of the student that leaves before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
who is shorter than alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )	overnight-socialnetwork
what is the field of study of student alice whose university is brown university	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )	overnight-socialnetwork
find me the employees who quit between 2004 and 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what friend of alice was born in new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
what genders are the people that stopped working after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
birthplace of students who finish contemporaneous to or before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people who are 180 cm or less in height	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find employees starting on or after alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employee has a start date that is the same as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find all single people	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
find me friends of people logged in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
find all people who have more than two friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what person has a birthdate no later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )	overnight-socialnetwork
what gender has the fewest people	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
find students with an end date that is equal to or greater than the birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employees who share the same job titles as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find friends of student who started later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of a student studying something other than computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
student whose university is either brown university or ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which students started before alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people who were born after alice graduated school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )	overnight-socialnetwork
which students graduate no sooner than alices first day of work	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has an end date before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which student started earliest	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me the relationship status of students who graduated since 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find relationship statuses for employees with a start date later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find employees working for the most employers	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who were born before alice started school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )	overnight-socialnetwork
who has maximum two relationship status	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )	overnight-socialnetwork
which friends stopped working in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
students who share alices field of study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person is 200 cm or shorter	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )	overnight-socialnetwork
what employee has fewer than two job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is alices first date of studying computer science in school	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )	overnight-socialnetwork
what is the phone number of a company	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ) )	overnight-socialnetwork
anyone who is alices friend	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people who were born in 2004 and are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what employees have a start date after the start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who is alices employer	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )	overnight-socialnetwork
whats the gender of employees who didnt start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
students with the same field of study as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has a start date that is the same as the end date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the gender of employees terminated on or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
an employee that ends before alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employees have a start date that is alices birthday or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the relationship status of the person that is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
which students graduate before alice does	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students who did not start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
employees who stopped working at the same time as alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find me the student who left school before alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is younger than alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
students finishing after alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find me students whose  end date is no later than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
gender of an employee starting before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what person was born earlier than that of alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
name a person born in 2004 who is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what person who ended in 2004 is 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
people that started working after alice stopped working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
gender of employees who left before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find the birthdplaces of new employees we have starting by 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which employee has a start date on alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find the gender of students who have a start date after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
gender of students who started in or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which people are friends with students who started after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what city is the bithplace of an employee who did not start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
a friend is someone not employed by mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that started work before alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
when did alice quit job at mckinsey	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )	overnight-socialnetwork
people that are 180 cm or 200 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) )	overnight-socialnetwork
find the friends of employees that quit in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which single people are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what is the students relationship status who didnt start in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what is the relationship status of people that started working in or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
gender of employees who start before or in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what are the relationship statuses of people that are currently online	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
what person has the same birthdate as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )	overnight-socialnetwork
find people who are currently online and born in new york	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )	overnight-socialnetwork
find employees with one employer	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what are the birth cities of students who have an end date that is not 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
an employee ending before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find people  born in 2004 whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find all people who are friends of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find students who have a start date the same as employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that are friends with a working person that isnt a software engineer	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
a student ending when alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find alices friends who are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )	overnight-socialnetwork
a student that ends before alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is friends with the student who graduates in 2004 or later	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
what people are friends with students whom have an end date that is no greater than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
student with most number of field of studies	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what is the relationship status of employees who left before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the relationship status of students who stated before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find the gender that more than two people share	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
which student started school after alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what city were students born in that started before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employee who quit before alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who was born before alices last day of school	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )	overnight-socialnetwork
an employee starting when or before alice ends	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
employees finishing contemporaneous to or before alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
who are some of alices friends connections	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )	overnight-socialnetwork
students who start before or on 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is shorter than 181cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find people with a height of 180 cm and the same birthplace as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
180 cm tall person with same relationship status as that of alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find the genders of students with end dates later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
person who first joined his study	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student who finishes before 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people born in any year except 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
find friends who are 180 cm tall like alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what city is the birthplace of employees before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what employees have an end date that is later than either 2004 or 2010	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people that started school after alice started working	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
people that did not stop working in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what did alice study in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )	overnight-socialnetwork
relationship status of nonsoftware engineers	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
employee whose end date is not 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
friends of people who are taller than 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
student whose end date is before birth date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what person is online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string logged_in ) ) )	overnight-socialnetwork
person whos 6 feet tall and studies computer science	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )	overnight-socialnetwork
what is the gender of employees who did not stop working in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what is the job title of the person that is 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
name a single person who is friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people who were born after alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )	overnight-socialnetwork
employee whose start date is not before start date of employee alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
persons born in new york in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
people who are friends with an employee that started later than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which relationship status is of at most two person	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
birthplace of employees whose end date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people that are the same height as alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.person.alice ( string height ) ) ) )	overnight-socialnetwork
students who left before alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
a worker who didnt start in 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
students finishing when alice starts	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students finishing on or after alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what are the relationship statuses of employees that do not work at mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
what person has two genders	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string <= ) ( number 2 ) ) )	overnight-socialnetwork
which employee started right when alice quit her job	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
when did alice finish studying computer science	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )	overnight-socialnetwork
find all of alices friends who are currently online	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
which employees started no later than the day alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
student that has studied at no more than 2 universities	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
is there a gender less than two people have	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
most popular birthplace	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what people have a birthdate that is 2004 and whose height is 180 cm	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
find employees friends with last day after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
people who have less than two friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
what city was two people born in	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
whats the relationship status of two people	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
find students starting on alices last day	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find friends of alice that are single	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
people that have two or fewer employers listed	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
one employee who left in 2004 or before	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which is the university of studen alice who finished in 2004	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )	overnight-socialnetwork
what are the genders of people born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
either mckinsey or google	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )	overnight-socialnetwork
people who stopped school on or after the date alice started school	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what do people study who are 180 cm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
friends of employees starting in or after 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who is friends with the online person	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )	overnight-socialnetwork
find me the people born in any year but 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )	overnight-socialnetwork
when did alice start school	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )	overnight-socialnetwork
what worker has the most job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
a friend of a student who started at least 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
people who have friends that were born in new york	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )	overnight-socialnetwork
student whose start date is after 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employee has a start date that is no earlier than the birthdate of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what employee has less than two jobs	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
what is the relationship status of current or former students excluding those that started in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employees with the latest start date	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find a person logged in that was born in 2004	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )	overnight-socialnetwork
city where person whose relationship status is single born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )	overnight-socialnetwork
people that started school on or after alices birthdate	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what employees before working before alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
find all employees whose start date matches alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
people who are in a relationship	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )	overnight-socialnetwork
students who have the same end date as the start date of student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which student goes to another university besides brown	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
whats the relationship status of students that did not study computer science	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find students with last day before or same as alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is 180 cm tall and has the same birthdate as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find people who were born in new york who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )	overnight-socialnetwork
what is the universitys number	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ) )	overnight-socialnetwork
which student started on alices birthday	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
students whose quit date of job is same as employee alices 	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find alices singlestatus friends	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what student stopped before alice was born	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
friends of people who quit their jobs after 2003	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find phone number of university	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ) )	overnight-socialnetwork
find company employing those who are 180 cm tall	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find student who started first	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
what field is alice studying in brown university	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )	overnight-socialnetwork
students finishing with alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
relationship status of employee whose end date is before 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
which of alices friends are online right now	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
find student with last day other than 2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who has maximum 2 friends	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )	overnight-socialnetwork
find the relationship statuses of employees who have an end date that is no more that 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
find employees whose start date is 2004 or later	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
which student has at least 2 university to go to	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students who attended the most universities	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
find students with a start date that is the same or greater than student alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
a student who left before alice started	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
which university did people who are 180 cm tall attend	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )	overnight-socialnetwork
find all alices friends that are male	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )	overnight-socialnetwork
who was born on or before alices final day of employment	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )	overnight-socialnetwork
find friends of people who did not start school in 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
which people are friends with students who graduated no sooner than 2004	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
employee who has maximum 2 job titles	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )	overnight-socialnetwork
where were the people that finished school before 2004 born	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )	overnight-socialnetwork
find me all the people that are 180 cm tall and were born in the same place as alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
what students have an end date that is earlier than the start date of alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
student whose start date  is before alices	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )	overnight-socialnetwork
who is friends with an employee who does not work for mckinsey	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )	overnight-socialnetwork
who is male and is friends with alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )	overnight-socialnetwork
